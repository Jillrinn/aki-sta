name: Frontend CI

on:
  push:
    branches: [ main ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-ci.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-ci.yml'

jobs:
  test:
    name: Test Frontend
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      run: npm ci
      working-directory: ./frontend
    
    - name: Run linter
      run: npm run lint --if-present
      working-directory: ./frontend
      continue-on-error: true
    
    - name: Run tests
      run: npm test -- --watchAll=false --passWithNoTests
      working-directory: ./frontend
      env:
        CI: true
    
    - name: Run tests with coverage
      if: matrix.node-version == '20.x'
      run: npm test -- --coverage --watchAll=false
      working-directory: ./frontend
      env:
        CI: true
    
    - name: Upload coverage reports
      if: matrix.node-version == '20.x'
      uses: actions/upload-artifact@v4
      with:
        name: frontend-coverage-report
        path: frontend/coverage/
        retention-days: 7
    
    - name: Check coverage threshold
      if: matrix.node-version == '20.x'
      run: |
        cd frontend
        # Extract coverage percentage from coverage report
        COVERAGE=$(npm test -- --coverage --watchAll=false --silent 2>&1 | grep "All files" | awk '{print $10}' | sed 's/%//' | sed 's/\.//')
        echo "Frontend test coverage: ${COVERAGE}%"
        
        # Check if coverage meets minimum threshold (70% for frontend)
        if [ -z "$COVERAGE" ]; then
          echo "Could not determine coverage"
          exit 0
        elif [ "$COVERAGE" -lt 70 ]; then
          echo "⚠️ Coverage is below 70% threshold"
          echo "Current coverage: ${COVERAGE}%"
          exit 1
        else
          echo "✅ Coverage meets the 70% threshold"
        fi
      env:
        CI: true

  build:
    name: Build Frontend
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      run: npm ci
      working-directory: ./frontend
    
    - name: Build application
      run: npm run build
      working-directory: ./frontend
      env:
        CI: true
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: frontend/build/
        retention-days: 7
    
    - name: Check build size
      run: |
        cd frontend/build
        SIZE=$(du -sh . | cut -f1)
        echo "Build size: $SIZE"
        
        # Check if build exists and has content
        if [ ! -d "static" ]; then
          echo "❌ Build failed: static directory not found"
          exit 1
        fi
        
        echo "✅ Build completed successfully"