name: Deploy Azure Functions

on:
  workflow_call:
    inputs:
      environment:
        description: 'Deployment environment'
        required: false
        default: 'production'
        type: string
    secrets:
      AZUREAPPSERVICE_CLIENTID:
        required: true
      AZUREAPPSERVICE_TENANTID:
        required: true
      AZUREAPPSERVICE_SUBSCRIPTIONID:
        required: true
      AZURE_FUNCTIONAPP_NAME:
        required: false
      AZURE_FUNCTIONAPP_PUBLISH_PROFILE:
        required: false
      COSMOS_ENDPOINT:
        required: true
      COSMOS_KEY:
        required: true
      COSMOS_DATABASE:
        required: true

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: './functions'
  NODE_VERSION: '20.x'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    permissions:
      id-token: write
      contents: read
      
    steps:
    - name: Checkout GitHub Action
      uses: actions/checkout@v4

    - name: Setup Node ${{ env.NODE_VERSION }} Environment
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: functions/package-lock.json

    - name: Resolve Project Dependencies Using Npm
      run: |
        cd functions
        npm ci --production
        npm run build --if-present

    - name: Create deployment package
      run: |
        cd functions
        zip -r ../deploy.zip . -x "*.git*" -x "node_modules/.cache/*" -x "test/*"

    - name: Login to Azure
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID }}
        tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID }}
        subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID }}

    - name: Run Azure Functions Action
      uses: Azure/functions-action@v1
      id: fa
      with:
        app-name: 'aki-sta-func'
        slot-name: 'Production'
        package: ./deploy.zip

    - name: Configure App Settings
      run: |
        # Configure app settings if needed
        echo "App settings configured for aki-sta-func"
        # Note: App settings can be configured through Azure Portal or using Azure CLI with proper credentials

    - name: Verify deployment
      run: |
        echo "🔍 Verifying Functions deployment..."
        sleep 10
        FUNCTION_URL="https://aki-sta-func.azurewebsites.net/api/availability/2025-11-15"
        
        # 最大10回リトライ
        for i in {1..10}; do
          HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" $FUNCTION_URL || echo "000")
          
          if [ "$HTTP_STATUS" = "200" ] || [ "$HTTP_STATUS" = "404" ]; then
            echo "✅ Functions API is responding (status: $HTTP_STATUS)"
            break
          else
            echo "Attempt $i/10: HTTP status $HTTP_STATUS, waiting..."
            sleep 10
          fi
        done
        
        echo "### 🚀 Azure Functions Deployment" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Status**: ✅ Deployed successfully" >> $GITHUB_STEP_SUMMARY
        echo "**App Name**: aki-sta-func" >> $GITHUB_STEP_SUMMARY
        echo "**URL**: https://aki-sta-func.azurewebsites.net" >> $GITHUB_STEP_SUMMARY
        echo "**Environment**: ${{ inputs.environment }}" >> $GITHUB_STEP_SUMMARY