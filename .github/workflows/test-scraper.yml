name: Scraper Tests

on:
  workflow_call:

jobs:
  test:
    name: Docker Scraper Tests
    runs-on: ubuntu-22.04
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker test image
      uses: docker/build-push-action@v5
      with:
        context: ./scraper
        file: ./scraper/Dockerfile.test
        tags: aki-sta-scraper:test
        cache-from: type=gha
        cache-to: type=gha,mode=max
        load: true
    
    - name: Run tests in Docker
      run: |
        # 結合テストも含めて全て実行（DISABLE_RATE_LIMITSを設定）
        docker run --rm -e DISABLE_RATE_LIMITS=true aki-sta-scraper:test python -m pytest tests/ -v --tb=short
      working-directory: ./scraper
      timeout-minutes: 10
    
    - name: Check coverage threshold
      run: |
        # Run tests with coverage and extract percentage (DISABLE_RATE_LIMITSを設定)
        docker run --rm -e DISABLE_RATE_LIMITS=true aki-sta-scraper:test python -m pytest tests/ --cov=src --cov-report=term 2>&1 | tee coverage.txt
        COVERAGE=$(grep "TOTAL" coverage.txt | awk '{print $4}' | sed 's/%//')
        echo "Scraper test coverage: $COVERAGE%"
        
        if [[ -z "$COVERAGE" ]]; then
          echo "⚠️ Could not extract coverage percentage"
          exit 0
        fi
        
        # Use awk for numeric comparison (bc might not be available)
        if awk "BEGIN {exit !($COVERAGE < 80)}"; then
          echo "⚠️ Coverage is below 80% threshold (Current: $COVERAGE%)"
          echo "Please consider adding more tests to improve coverage."
          exit 0
        else
          echo "✅ Coverage meets the 80% threshold"
        fi
      working-directory: ./scraper
    
    - name: Test scraper execution (dry run)
      run: |
        # テスト環境変数でスクレイパーの起動確認（環境変数はイメージに含まれている）
        docker run --rm aki-sta-scraper:test python -m src.entrypoints.cli --help
      working-directory: ./scraper
    
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: scraper-test-results
        path: scraper/.pytest_cache/
        retention-days: 7