name: E2E Tests

on:
  workflow_call:
    secrets:
      COSMOS_ENDPOINT:
        required: true
      COSMOS_KEY:
        required: true
      COSMOS_DATABASE:
        required: true

jobs:
  test:
    name: E2E Tests
    runs-on: ubuntu-22.04
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: e2e/package-lock.json
    
    - name: Create local.settings.json for E2E
      run: |
        cat > api/local.settings.json << EOF
        {
          "IsEncrypted": false,
          "Values": {
            "AzureWebJobsStorage": "",
            "FUNCTIONS_WORKER_RUNTIME": "node",
            "COSMOS_ENDPOINT": "${{ secrets.COSMOS_ENDPOINT }}",
            "COSMOS_KEY": "${{ secrets.COSMOS_KEY }}",
            "COSMOS_DATABASE": "${{ secrets.COSMOS_DATABASE }}"
          },
          "Host": {
            "CORS": "*",
            "CORSCredentials": false
          }
        }
        EOF
    
    - name: Install dependencies
      run: |
        cd api && npm ci
        cd ../frontend && npm ci
        cd ../e2e && npm ci
    
    - name: Install Playwright browsers with environment isolation
      run: |
        cd e2e
        # 新しい環境分離システムを使用
        npm run setup-env
        # 動作確認
        npm run ensure-browsers
    
    - name: Start Azure Functions
      run: |
        cd api
        # Start Azure Functions in background with nohup using npx
        nohup npx func start --port 7071 > azure-functions.log 2>&1 &
        echo $! > azure-functions.pid
        echo "Azure Functions PID: $(cat azure-functions.pid)"
        
        # Wait for Azure Functions to be ready
        echo "Waiting for Azure Functions to start..."
        for i in {1..30}; do
          if curl -s -f http://localhost:7071/api/availability/2025-11-15 > /dev/null 2>&1; then
            echo "✅ Azure Functions is running and responding"
            break
          fi
          echo "Attempt $i/30: Azure Functions not ready yet..."
          sleep 2
        done
        
        # Check if it's really running
        if ! curl -s -f http://localhost:7071/api/availability/2025-11-15 > /dev/null 2>&1; then
          echo "❌ Azure Functions failed to start"
          echo "=== Azure Functions Log ==="
          cat azure-functions.log
          exit 1
        fi
      env:
        FUNCTIONS_WORKER_RUNTIME: node
        AzureWebJobsStorage: ""
    
    - name: Start Frontend
      run: |
        cd frontend
        # Start Frontend in background with nohup
        nohup npm start > frontend.log 2>&1 &
        echo $! > frontend.pid
        echo "Frontend PID: $(cat frontend.pid)"
        
        # Wait for Frontend to be ready
        echo "Waiting for Frontend to start..."
        for i in {1..30}; do
          if curl -s -f http://localhost:3300 2>&1 | grep -q "<!DOCTYPE html>"; then
            echo "✅ Frontend is running and serving HTML"
            break
          fi
          echo "Attempt $i/30: Frontend not ready yet..."
          sleep 2
        done
        
        # Check if it's really running
        if ! curl -s -f http://localhost:3300 2>&1 | grep -q "<!DOCTYPE html>"; then
          echo "❌ Frontend failed to start"
          echo "=== Frontend Log ==="
          cat frontend.log
          exit 1
        fi
      env:
        CI: true
        BROWSER: none
        PORT: 3300
    
    - name: Run E2E tests
      run: |
        cd e2e
        npm test
      env:
        CI: true
    
    - name: Show logs on failure
      if: failure()
      run: |
        echo "=== Azure Functions Log ==="
        if [ -f functions/azure-functions.log ]; then
          tail -100 functions/azure-functions.log
        fi
        echo "=== Frontend Log ==="
        if [ -f frontend/frontend.log ]; then
          tail -100 frontend/frontend.log
        fi
    
    - name: Upload E2E test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: e2e-test-results
        path: e2e/test-results/
        retention-days: 7
    
    - name: Upload Playwright report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: playwright-report
        path: e2e/playwright-report/
        retention-days: 7