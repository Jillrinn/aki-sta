name: Python Scraper CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'scraper/**'
      - '.github/workflows/python-scraper.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'scraper/**'
      - '.github/workflows/python-scraper.yml'

defaults:
  run:
    working-directory: scraper

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11']
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('scraper/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install coverage pytest-cov
    
    - name: Install Playwright browsers
      run: |
        playwright install chromium
        playwright install-deps chromium
    
    - name: Run tests with coverage
      run: |
        python -m pytest tests/ -v --cov=src --cov-report=xml --cov-report=term
    
    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.9'
      uses: codecov/codecov-action@v3
      with:
        file: ./scraper/coverage.xml
        flags: scraper
        name: scraper-coverage
        fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install linting tools
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort mypy
    
    - name: Run flake8
      run: |
        flake8 src/ tests/ --max-line-length=100 --ignore=E203,W503
      continue-on-error: true
    
    - name: Check formatting with black
      run: |
        black --check --diff src/ tests/
      continue-on-error: true
    
    - name: Check import sorting with isort
      run: |
        isort --check-only --diff src/ tests/
      continue-on-error: true
    
    - name: Type checking with mypy
      run: |
        pip install -r requirements.txt
        mypy src/ --ignore-missing-imports
      continue-on-error: true

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install safety
      run: |
        python -m pip install --upgrade pip
        pip install safety
    
    - name: Check for security vulnerabilities
      run: |
        pip install -r requirements.txt
        safety check --json
      continue-on-error: true